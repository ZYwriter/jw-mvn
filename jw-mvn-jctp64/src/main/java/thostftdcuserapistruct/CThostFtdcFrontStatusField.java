package thostftdcuserapistruct;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
/**
 * \u524d\u7f6e\u72b6\u6001<br>
 * <i>native declaration : F:\jna\ThostFtdcUserApiStruct.h:1177</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */

 
public class CThostFtdcFrontStatusField extends StructObject {
	public CThostFtdcFrontStatusField() {
		super();
	}
	/**
	 * \u524d\u7f6e\u7f16\u53f7<br>
	 * C type : TThostFtdcFrontIDType
	 */
	@Field(0) 
	public int FrontID() {
		return this.io.getIntField(this, 0);
	}
	/**
	 * \u524d\u7f6e\u7f16\u53f7<br>
	 * C type : TThostFtdcFrontIDType
	 */
	@Field(0) 
	public CThostFtdcFrontStatusField FrontID(int FrontID) {
		this.io.setIntField(this, 0, FrontID);
		return this;
	}
	/**
	 * \u4e0a\u6b21\u62a5\u544a\u65e5\u671f<br>
	 * C type : TThostFtdcDateType
	 */
	@Array({9}) 
	@Field(1) 
	public Pointer<Byte > LastReportDate() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * \u4e0a\u6b21\u62a5\u544a\u65f6\u95f4<br>
	 * C type : TThostFtdcTimeType
	 */
	@Array({9}) 
	@Field(2) 
	public Pointer<Byte > LastReportTime() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * \u662f\u5426\u6d3b\u8dc3<br>
	 * C type : TThostFtdcBoolType
	 */
	@Field(3) 
	public int IsActive() {
		return this.io.getIntField(this, 3);
	}
	/**
	 * \u662f\u5426\u6d3b\u8dc3<br>
	 * C type : TThostFtdcBoolType
	 */
	@Field(3) 
	public CThostFtdcFrontStatusField IsActive(int IsActive) {
		this.io.setIntField(this, 3, IsActive);
		return this;
	}

	@SuppressWarnings({ "rawtypes", "unchecked" })
	public CThostFtdcFrontStatusField(Pointer pointer) {
		super(pointer);
	}
}
